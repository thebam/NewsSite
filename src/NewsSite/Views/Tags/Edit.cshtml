@model NewsSite.Models.TagViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<form asp-action="Edit">
    <div class="form-horizontal">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="TagId" />
        <div class="form-group">
            <label asp-for="TagName" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="TagName" class="form-control" />
                <span asp-validation-for="TagName" class="text-danger" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    <input asp-for="Enabled" />
                    <label asp-for="Enabled"></label>
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" /> <a class="btn btn-default" asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</form>

<hr class="wavy"/>
<h2>Related Items</h2>
<h3>Articles</h3>
@foreach (var article in Model.Articles)
{
    <div>
        @article.Title
    </div>

}
<h3>Media Kit Files</h3>
<div id="mediaKitFiles">
    @foreach (var mediaKitFile in Model.MediaKitFiles)
    {
        <div class="mediakitFileWrapper">
            @Html.Raw(mediaKitFile.IconURL)
            <p>
                <strong>caption</strong><br /> @mediaKitFile.Description
            </p>
        </div>

    }
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
